package rest.recursos;

import java.util.List;

import javax.ws.rs.*;
import javax.ws.rs.core.*;
import manager.factoryDAO;
import iDAO.*;
import model.MapPoint;
import model.Photo;
import model.Route;
import model.User;

@Path("/rutas")
public class RouteResource {
	@Context
	UriInfo uriInfo;
	@Context
	Request request;
	private iDAORoute rdao = factoryDAO.getRouteDAO();
	private iDAOUser udao = factoryDAO.getUserDAO();
	private iDAOMapPoint mdao = factoryDAO.getMapPointDAO();
	private iDAOPhoto pdao = factoryDAO.getPhotoDAO();

	private String mensaje;

	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public List<Route> getRutasPublicas() {
		return rdao.findAll();
	}

	@GET
	@Path("myRoutes/{id}")
	@Produces(MediaType.APPLICATION_JSON)
	public List<Route> encontrarMisRutas(@PathParam("id") Integer id) {
		return rdao.findByUser(udao.findId(id));
	}
	
	@GET
	@Path("{id}")
	@Produces(MediaType.APPLICATION_JSON)
	public Route encontrarRuta(@PathParam("id") Integer id) {
		return rdao.findId(id);
	}

	@POST
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Route crear(Route ruta) {
		Route aux = rdao.findId(ruta.getId());
		if (aux == null)	
			rdao.insert(ruta);
		return rdao.findInserted(ruta.getOwner(),ruta.getName(),ruta.getActivity());
	}

	@PUT
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Route editar(Route ruta) {
		Route aux = rdao.findId(ruta.getId());
		if (aux != null)
			rdao.update(ruta);
		return rdao.findInserted(ruta.getOwner(), ruta.getName(), ruta.getActivity());
	}

	@DELETE
	@Path("delete/{id}")
	@Produces(MediaType.TEXT_PLAIN)
	public Response borrar(@PathParam("id") Integer id) {
		Route aux = rdao.findId(id);
//		User us = udao.findId(aux.getOwner().getId());
//		List<Route> list = us.getMyRoute();
//		for(int i=0;i<list.size();i++) {
//			if(list.get(i).getId()==aux.getId()) {
//				list.remove(i);
//				break;
//			}
//		}
//		us.setMyRoute(list);
//		List<Photo> ph = aux.getPhotos();
//		for(int i=0;i<ph.size();i++) {
//			pdao.delete(ph.get(i));
//		}
//		
//		List<MapPoint> mp = aux.getPoints();
//		for(int i=0;i<mp.size();i++) {
//			mdao.delete(mp.get(i));
//		}
		if (aux != null) {// && us != null) {
			//udao.update(us);
			rdao.delete(aux);
			Route aux2 = rdao.findId(id);
			if(aux2!=null) {
				rdao.deleteForce(aux2);
				System.out.println("deleteforce");
			}
			System.out.println("entro");

			return Response.ok().build();
		} else {
			mensaje = "No se entro a eliminar";
			System.out.println(mensaje);
			return Response.status(Response.Status.NOT_FOUND).entity(mensaje).build();
		}
	}
}